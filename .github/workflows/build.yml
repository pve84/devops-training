name: Build and deploy
on: [push]
env:
  ACR_PASSWORD: ${{ secrets.acr_password }}
  ACR_USERNAME: devopstrainingincentro
  REGISTRY: devopstrainingincentro.azurecr.io
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn clean install
    - name: Build image and push to ACR
      run: |
        war=$(cd target; ls api*.war)
        tag=$(echo $war | sed s/api-//g | sed s/.war//g)
        trainee=${GITHUB_REF##*/}
        docker build -t $REGISTRY/$trainee:$tag --build-arg war=$war -f Dockerfile ./target
        echo $ACR_PASSWORD | docker login $REGISTRY -u $ACR_USERNAME --password-stdin
        docker push $REGISTRY/$trainee:$tag
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: create kubeconfig
      env:
        KUBECONFIG_CONTENT: ${{ secrets.kubeconfig }}
      run: |
        mkdir -p ${HOME}/.kube
        echo $KUBECONFIG_CONTENT | base64 -d > ${HOME}/.kube/config
        echo ${HOME}/.kube/config
    - name: create namespace and imagepullsecret
      run: | 
        trainee=${GITHUB_REF##*/}
        kubectl create ns $trainee --dry-run -o yaml | kubectl apply -f -
        kubectl create secret docker-registry acrcreds --namespace=$trainee --docker-server=$REGISTRY --docker-username=$ACR_USERNAME --docker-password=$ACR_PASSWORD --docker-email=foo@bar.com
    - name: Deploy Chart
      run: | 
        tag=$(cd target; ls api*.war | sed s/api-//g | sed s/.war//g)
        trainee=${GITHUB_REF##*/}
        helm upgrade --install --namespace $trainee $trainee -f simple-deploy/values.yaml --set image.repository=$trainee,image.tag=$tag ./simple-deploy
