name: Build and deploy
on: [push]
# globale variablen
env:
  ACR_PASSWORD: ${{ secrets.acr_password }}
  ACR_USERNAME: devopstrainingincentro
  REGISTRY: devopstrainingincentro.azurecr.io
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Haal de source binnen
    - uses: actions/checkout@v2
    # Zorg dat de juiste versie van Java beschikbaar is
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    # Build het project en maar sla de testen over
    - name: Build with Maven
      run: mvn clean install -DskipTests
    # Build een image en sla deze op in de container registry bij Azure
    - name: Build image and push to ACR
      run: |
        # Achterhaal de naam van de war file
        war=$(cd target; ls api*.war)
        # Haal api- van de war of zodat alleen het versie nummer overblijft en sla op als tag variable
        tag=$(echo $war | sed s/api-//g | sed s/.war//g)
        # de huidige branch is de naam van trainee
        trainee=${GITHUB_REF##*/}
        # schrijf de tag variable weg naar een bestand
        echo $tag > imagetag.txt
        # Bouw een de docker image
        docker build -t $REGISTRY/$trainee:$tag --build-arg war=$war -f Dockerfile ./target
        # Login bij de ACR
        echo $ACR_PASSWORD | docker login $REGISTRY -u $ACR_USERNAME --password-stdin
        # push de image naar de ACR
        docker push $REGISTRY/$trainee:$tag
    # sla het imagetag.txt bestand op als artifact
    - name: Store tag as text file
      uses: actions/upload-artifact@v1
      with:
        name: imagetag
        path: imagetag.txt
